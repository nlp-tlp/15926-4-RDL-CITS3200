#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Run client-side checks
cd src/client && npm run lint:fix && npm run format && npm run type-check

# Navigate to the server directory
cd ../../src/server

# Activate the Python virtual environment
. venv/bin/activate

# Run black and capture both stdout and stderr
black_output=$(black . 2>&1)
black_status=$?

# Run black for cli scripts
# black_output2=$(black ../cli 2>&1)
# black_status2=$?

# Deactivate the virtual environment
deactivate

# Check if the output from either black run contains "reformatted" or if the status code is non-zero
# if echo "$black_output" | grep -q "reformat\|reformatted" || [ $black_status -ne 0 ] || \
#    echo "$black_output2" | grep -q "reformat\|reformatted" || [ $black_status2 -ne 0 ]; then
if echo "$black_output" | grep -q "reformat\|reformatted" || [ $black_status -ne 0 ]; then
  echo "Black found and corrected issues:"

  # Print output from both black runs
  echo "Black output for server directory:"
  echo "$black_output"

  # echo "Black output for cli directory:"
  # echo "$black_output2"

  echo "Please review and commit the changes."
  exit 1  # Exit with an error code to prevent the commit
else
  echo "No formatting issues found."
fi