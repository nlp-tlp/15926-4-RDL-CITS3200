#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Run client-side checks
cd src/client && npm run lint:fix && npm run format && npm run type-check

# Navigate to the server directory
cd ../../src/server

# Define possible virtual environment directories as a space-separated list
venv_dirs="venv .venv env myenv"

# Attempt to activate the virtual environment
venv_found=false
for venv_dir in $venv_dirs; do
  if [ -d "$venv_dir/bin" ]; then
    echo "Activating virtual environment: $venv_dir"
    . "$venv_dir/bin/activate"
    venv_found=true
    break
  elif [ -d "$venv_dir/Scripts" ]; then
    echo "Activating virtual environment: $venv_dir (Windows)"
    . "$venv_dir/Scripts/activate"
    venv_found=true
    break
  fi
done

# Run black and capture both stdout and stderr
black_output=$(black . 2>&1)
black_status=$?

# Deactivate the virtual environment
deactivate

# Check if the output from either black run contains "reformatted" or if the status code is non-zero
if echo "$black_output" | grep -q "reformat\|reformatted" || [ $black_status -ne 0 ]; then
  echo "Black found and corrected issues:"

  # Print output from black runs
  echo "Black output for server directory:"
  echo "$black_output"

  echo "Please review and commit the changes."
  exit 1  # Exit with an error code to prevent the commit
else
  echo "No formatting issues found."
fi